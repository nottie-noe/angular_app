---
- name: Deploy Angular app to Web Server
  hosts: web-server1
  become: yes
  vars:
    my_s3_bucket: "nottie-angular-app" 
    artifact_version: "{{ artifact_version }}"
    app_directory: "/var/www/html"
    app_symlink: "{{ app_directory }}/angular_app"
    versioned_dir: "{{ app_directory }}/angular_app-{{ artifact_version }}"
    artifact_file: "/tmp/angular_app-{{ artifact_version }}.tar.gz"

  tasks:
    - name: Ensure Apache is installed and running
      apt:
        name: apache2
        state: present
      notify:
        - restart apache

    - name: Ensure Apache is running
      service:
        name: apache2
        state: started

    - name: Download Angular app artifact from S3 using AWS CLI
      command: "aws s3 cp s3://{{ my_s3_bucket }}/artifacts/angular_app-{{ artifact_version }}.tar.gz {{ artifact_file }}"
      register: s3_result  # Capture the result of the AWS CLI download task
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"


    - name: Extract Angular app artifact
      unarchive:
        src: "{{ artifact_file }}"
        dest: "{{ versioned_dir }}"
        remote_src: yes
      when: s3_result.changed  # Only run if the artifact was downloaded

    - name: Remove existing 'current' symlink if it exists
      file:
        path: "{{ app_symlink }}"
        state: absent
      when: s3_result.changed  # Only run if the artifact was downloaded

    - name: Create symlink to the new versioned app
      file:
        src: "{{ versioned_dir }}"
        dest: "{{ app_symlink }}"
        state: link
      when: s3_result.changed  # Only run if the artifact was downloaded

    - name: Set the correct permissions on the deployed files
      file:
        path: "{{ versioned_dir }}"
        recurse: yes
        owner: www-data
        group: www-data
        mode: "0755"
      when: s3_result.changed  # Only run if the artifact was downloaded

    - name: Update Apache config to point to the new DocumentRoot
      lineinfile:
        path: /etc/apache2/sites-available/000-default.conf
        regexp: '^DocumentRoot'
        line: "DocumentRoot {{ app_symlink }}"
        state: present
      notify:
        - restart apache

    - name: Restart Apache to apply changes
      service:
        name: apache2
        state: restarted
      when: s3_result.changed  # Only restart Apache if the artifact was downloaded and deployed

  handlers:
    - name: restart apache
      service:
        name: apache2
        state: restarted
